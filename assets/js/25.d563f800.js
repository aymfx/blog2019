(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{539:function(s,a,t){"use strict";t.r(a);var n=t(6),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("微信公众号："),t("strong",[s._v("[猫十二的日常]")]),s._v("\n深漂中的前端团子，猫十二的铲屎官，生活不止 code，还有猫和你。")])]),s._v(" "),t("h2",{attrs:{id:"常见的命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的命令"}},[s._v("#")]),s._v(" 常见的命令")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("echo 用于输出")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aymfx最帅'")]),s._v("\n")])])])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("变量使用")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("your_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$your_name")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${your_name}")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("只读变量")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" myname\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"赋值不能出现空格"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#myname: readonly variable")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),s._v("\n")])])])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("删除变量")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" myname\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 没有输出")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("单引号")]),s._v(" "),t("ul",[t("li",[s._v("单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；")]),s._v(" "),t("li",[s._v("单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用。")])])]),s._v(" "),t("li",[t("p",[s._v("双引号")]),s._v(" "),t("ul",[t("li",[s._v("双引号里可以有变量")]),s._v(" "),t("li",[s._v("双引号里可以出现转义字符")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello '),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$str")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("获取字符串长度")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("string}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输出 5")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("提取子字符串")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aymfx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("3}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输出 ymf")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("查找子字符串")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在这种情况下使用“ expr”命令 只用在 linux 命令上")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('STRING="this is a string"\nSUBSTRING="hat"\nexpr index "$STRING" "$SUBSTRING"     # 1 is the position of the first \'t\' in $STRING\n')])])])])])]),s._v(" "),t("li",[t("p",[s._v("最短子串匹配")]),s._v(" "),t("ul",[t("li",[s._v("${string#substring}")]),s._v(" "),t("li",[s._v("${string%substring}")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("filename")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash.string.txt"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("*.}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#string.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(".*}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bash.string")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("最短子串匹配")]),s._v(" "),t("ul",[t("li",[s._v("${string##substring}")]),s._v(" "),t("li",[s._v("${string%%substring}")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("filename")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash.string.txt"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"After deletion of longest match from front:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("##")]),s._v("*.}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"After deletion of longest match from back:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%%")]),s._v(".*}")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash")]),s._v("\n")])])])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("子串替换")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("用替换替换第一次出现的子字符串")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("str='to be or not to be'\necho ${str[@]/be/cat} #to cat or not to be\n")])])]),t("ul",[t("li",[t("p",[s._v("替换所有出现的子串")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'to be or not to be'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("be"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("cat}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#to cat or not to cat")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("删除所有出现的子字符串(替换为空字符串)")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'to be or not to be'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" not"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#to be or not to be")]),s._v("\n")])])])])])])])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果在$str 开头替换子字符串的出现")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'to be or not to be'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("to be"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("eat now}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#eat now or not to be")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("如果在$str 结尾,则替换子字符串的出现")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"to be or not to be"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("be"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("eat}")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to be or not to eat")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("数组")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("初始化 （一个数组可以用一个名称保存多个值。数组命名与变量命名相同。 通过分配()中包含的以空格分隔的值来初始化数组）")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("apple")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$apple")]),s._v(" banana "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fruit basket"')]),s._v(" orange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#orange")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" aymfx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#aymfx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("数组成员不必是连续的或连续的。数组的某些成员可以保留为未初始化。")])]),s._v(" "),t("li",[t("p",[s._v("数组中元素的总数由$ {#arrayname [@]}引用")])])])]),s._v(" "),t("li",[t("p",[s._v("算术运算符")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("a + b")]),s._v("加法(a 加 b)")]),s._v(" "),t("li",[t("strong",[s._v("a-b")]),s._v("减(a 减 b)")]),s._v(" "),t("li",[t("strong",[s._v("a * b")]),s._v("乘法(a 乘以 b)")]),s._v(" "),t("li",[t("strong",[s._v("a / b")]),s._v("除法(整数)(a 除以 b)")]),s._v(" "),t("li",[t("strong",[s._v("a%b")]),s._v("取模(除以 b 的整数余数)")]),s._v(" "),t("li",[s._v("**a**********b**取幂(a 等于 b 的幂)")])])]),s._v(" "),t("li",[t("p",[s._v("条件语句")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第一种")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aymfx'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aymfx'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v(' 真帅"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aymfx 真帅")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第二种")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aymfx'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ly'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v(' 真帅"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aymfx 真帅")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"没有比'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v('再帅的了"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第三种")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aymfx'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ly'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v(' 真帅"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aymfx 真帅")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aymfx'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v(' 帅爆了"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aymfx 帅爆了")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"没有比'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v('再帅的了"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数值比较类型")]),s._v("\ncomparison    Evaluated to "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" when\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -lt "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -gt "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -le "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -ge "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -eq "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" is equal to "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -ne "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" is not equal to "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 字符串比较的类型")]),s._v("\n\ncomparison    Evaluated to "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" when\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" is the same as "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" is the same as "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" is different from "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("\n-z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("         "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" is empty\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# case")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mycase")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$mycase")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You selected bash"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You selected perl"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You selected phyton"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You selected c++"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("=周围必须有空格\n在字符串变量周围使用“”,以避免将特殊字符的shell扩展为*\n")])])])]),s._v(" "),t("li",[t("p",[s._v("循环结构")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for循环")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("arg")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("names")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("aymfx liya zhangmeng"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${names"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# while")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" condition "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COUNT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COUNT")]),s._v(" -gt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value of count '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${COUNT}")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COUNT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$COUNT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bash直到循环")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" condition "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COUNT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COUNT")]),s._v(" -gt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value of count '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${COUNT}")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COUNT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$COUNT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NUMBERS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("951")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("402")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("984")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("651")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("360")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("69")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("408")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("319")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("601")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("485")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("980")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("507")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("725")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("547")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("544")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("615")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("83")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("165")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("141")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("501")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("263")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("617")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("865")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("575")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("219")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("390")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("237")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("412")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("566")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("826")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("248")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("866")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("950")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("626")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("949")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("687")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("217")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("815")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("67")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("104")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("58")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("892")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("894")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("767")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("553")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("81")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("379")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("843")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("831")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("445")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("742")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("717")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("958")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("609")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("842")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("451")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("688")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("753")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("854")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("685")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("93")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("857")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("440")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("380")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("126")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("721")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("328")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("753")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("470")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("743")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("527")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("value")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${NUMBERS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$value")]),s._v(" -eq "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("237")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$value")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# break和continue可用于控制for,while和直到构造的循环执行。continue用于跳过特定循环迭代的其余部分,而break用于跳过整个循环的其余部分。")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("shell 函数")]),s._v(" "),t("ul",[t("li",[s._v("函数调用等效于命令。通过在函数名称后面指定参数,可以将参数传递给函数。函数中的第一个参数称为$ 1,第二个参数称为$ 2 等")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("function_B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Function B."')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("function_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("adder")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\nfunction_A "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Function A."')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Function A.")]),s._v("\nfunction_B                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Function B.")]),s._v("\nadder "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 68")]),s._v("\n")])])])])]),s._v(" "),t("h2",{attrs:{id:"一些解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些解释"}},[s._v("#")]),s._v(" 一些解释")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("#!")]),s._v(" 是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种 Shell。")]),s._v(" "),t("ul",[t("li",[t("em",[s._v("#! /bin/bash")])])])]),s._v(" "),t("li",[t("p",[s._v("运行脚本的方法")]),s._v(" "),t("ul",[t("li",[s._v("chmod +x ./test.sh #使脚本具有执行权限")]),s._v(" "),t("li",[s._v("./test.sh #执行脚本")]),s._v(" "),t("li",[s._v("/bin/sh test.sh")])])]),s._v(" "),t("li",[t("p",[s._v("变量类型")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("局部变量")]),s._v(" 局部变量在脚本或命令中定义，仅在当前 shell 实例中有效，其他 shell 启动的程序不能访问局部变量。")]),s._v(" "),t("li",[t("strong",[s._v("环境变量")]),s._v(" 所有的程序，包括 shell 启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候 shell 脚本也可以定义环境变量。")]),s._v(" "),t("li",[t("strong",[s._v("shell 变量")]),s._v(" shell 变量是由 shell 程序设置的特殊变量。shell 变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了 shell 的正常运行")])])]),s._v(" "),t("li",[t("p",[s._v("命令输出的值")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("可以通过用``(称为反引号)或$()封装命令来完成替换")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FILELIST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FileWithTimeStamp")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/tmp/my-dir/file_"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("/bin/date +%Y-%m-%d"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(".txt\n")])])])])])]),s._v(" "),t("li",[t("p",[s._v("$1变量引用命令行中的第一个参数,$2 引用第二个参数,依此类推。 变量$0 引用当前脚本。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("命令\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" auto.sh apple banner\n\n执行后\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#auto.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#apple")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("特殊变量")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("$0")]),s._v("-当前脚本的文件名|")]),s._v(" "),t("li",[t("code",[s._v("$n")]),s._v("-调用传递给脚本的第 N 个参数或调用函数|")]),s._v(" "),t("li",[t("code",[s._v("$#")]),s._v("-传递给脚本或函数的参数数量|")]),s._v(" "),t("li",[t("code",[s._v("$@")]),s._v("-所有传递给脚本或函数的参数|")]),s._v(" "),t("li",[t("code",[s._v("$*")]),s._v("-所有传递给脚本或函数的参数|")]),s._v(" "),t("li",[t("code",[s._v("$?")]),s._v("-最后执行的命令的退出状态|")]),s._v(" "),t("li",[t("code",[s._v("$$")]),s._v("-当前 shell 的进程 ID。对于 shell 脚本,这是它们正在执行的进程 ID.|")]),s._v(" "),t("li",[t("code",[s._v("$!")]),s._v("-最后一个后台命令的进程号|")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Script Name: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("i+1\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The \\$'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${i}")]),s._v(" argument is: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var}")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Total count of arguments: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfunc We are argument\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Script Name: auto.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#The $1 argument is: We")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#The $2 argument is: are")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#The $3 argument is: argument")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Total count of arguments: 3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--- '),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("\\"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("ARG")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ARG")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--- '),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("\\"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("ARG")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ARG")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nfunc We are argument\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#--- "$*"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#We are argument")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#--- "$@"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#We")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#are")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#argument")]),s._v("\n\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("常见信号类型")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("SIGINT")]),s._v(":用户发送中断信号(Ctrl + C)")]),s._v(" "),t("li",[t("code",[s._v("SIGQUIT")]),s._v(":用户发送退出信号(Ctrl + C)")]),s._v(" "),t("li",[t("code",[s._v("SIGFPE")]),s._v(":尝试了非法的数学运算")])]),s._v(" "),t("blockquote",[t("p",[s._v("HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM URG STOP TSTP CONT CHLD TTIN TTOU IO XCPU XFSZ VTALRM PROF WINCH INFO USR1 USR2")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo Booh!"')]),s._v(" SIGINT SIGTERM\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"it\'s going to run until you hit Ctrl+Z"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hit Ctrl+C to be blown away!"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" booh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -f folder; exit"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n")])])])]),s._v(" "),t("li",[t("p",[s._v("文件测试（通常,您将需要对正在运行的文件系统进行一些文件测试。在这种情况下,shell 将为您提供一些有用的命令来实现它。）")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("-<command> [filename]")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("[filename1] -<command> [filename2]")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用“ -e”测试文件是否存在")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("filename")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"package.json"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$filename")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$filename")]),s._v(' exists as a file"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用“ -d”测试目录是否存在")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("directory_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"public"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$directory_name")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$directory_name")]),s._v(' exists as a directory"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用“ -r”测试文件是否对运行脚本/测试的用户具有读取权限")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("filename")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README.md'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -f "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename}")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -r "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${filename}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" 有可读权限\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" 没有权限\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])])])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://www.maymfx.cn/pic/qrcode_for_gh_7a03379925e6_258.jpg",alt:"公众号"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);