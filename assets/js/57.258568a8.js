(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{570:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。")])]),t._v(" "),s("p",[t._v("#安装\n需要下载:Git-2.10.0-64-bit.exe")]),t._v(" "),s("p",[t._v("#配置\nssh 配置：Git GUI --- 帮助 ---show ssh key--拷贝\n进入 github -- 右上角 -- setting -- SSH and GPG keys\n利用命令:ssh-keygen -t rsa -C “你的邮箱”\n##配置个人用户信息和电子邮件地址")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name “ ”\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email “ ”\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("查看所有配置项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend --author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Your Name '")]),t._v(" 修改用户名\n")])])]),s("h1",{attrs:{id:"常用的命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的命令"}},[t._v("#")]),t._v(" 常用的命令")]),t._v(" "),s("h3",{attrs:{id:"命令查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令查看"}},[t._v("#")]),t._v(" 命令查看")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(" git config --list\n")])])]),s("h3",{attrs:{id:"_1-git-工作区-暂存区-版本git-clone-url-取远git-status-查看当前状态-取代码之后本地代码哪些发生改变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-工作区-暂存区-版本git-clone-url-取远git-status-查看当前状态-取代码之后本地代码哪些发生改变"}},[t._v("#")]),t._v(" 1. GIT （工作区/暂存区/版本git clone [url] ： 取远git status（查看当前状态） 取代码之后本地代码哪些发生改变")]),t._v(" "),s("p",[t._v('git  add filename（将文件从工作区添加到暂存区）\ngit add .（上面的简写，所有的文件）\ngit commit -m "注释" （将缓存区的文件放到版本区）\ngit reset HEAD filename 撤销操作：将 filename 从暂存区撤回到工作区。\ngit remote 获取远程仓库的名称 origin（远程仓库的名称可以修改的）\ngit remote -v 获取远程仓库的地址这里写代码片\ngit push origin master(分支) 将本地资源同步到远程仓库2、例如：工作区的文件删除了，可以通过此命令还原 checkout commit_id （commit_id log 信息 id 名称。）\ngit log 日志 操作情况\ngit ls-files：查看暂存区的文件')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("### 3、对比：查看三个分区的差异\n\n​``` bash\ngit diff 对比的是工作区和暂存区代码的不同\ngit diff --cached（--staged） 对比的是暂存区与版本库代码的不同\ngit diff master 对比的是工作区与版本库代码的不同\n")])])]),s("h3",{attrs:{id:"_4、删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、删除"}},[t._v("#")]),t._v(" 4、删除：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git rm filename 删除暂存区的文件，前提是工作区已经删除此文件了。\ngit rm -f filename 删除暂存区和工作区的文件。\ngit rm --cached filename 删除暂存区的文件，不会删除工作区。\n")])])]),s("h3",{attrs:{id:"_5、多人协作解决冲突-同步更新远程仓库里面的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、多人协作解决冲突-同步更新远程仓库里面的代码"}},[t._v("#")]),t._v(" 5、多人协作解决冲突：同步更新远程仓库里面的代码")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch 将远程中的代码与本地代码手动合并\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch 显示冲突\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" master origin/master 对比代码 显示区别\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master 手动合并\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull 将远程中的代码与本地代码自动合并"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_6、分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、分支"}},[t._v("#")]),t._v(" 6、分支")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch 查看分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch new1 创建分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout new1 切换分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge new1 合并分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b new2 创建并切换分支（组合的写法）\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --merged 查看当前分支下合并的分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --no-merged 查看当前分支下没有合并的分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d new1 删除一个与当前分支合并下的分支。\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D new2 强制删除一个本地分支\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :branchname 删除远程创库的分支。\n")])])]),s("h1",{attrs:{id:"标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[t._v("#")]),t._v(" 标签")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v1.0\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin v1.0\n")])])]),s("h1",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch new1\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);