(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{568:function(e,t,a){"use strict";a.r(t);var n=a(6),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-4adb688267c9f4d3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"timg.jpg"}})]),e._v(" "),a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("blockquote",[a("p",[e._v("从家里回来了，翻了翻书，发现es6的知识点，忘了不少，还好记了点笔记，今年需要更加努力，看着以前的同学都开始娶妻生子，买车买房，我也要努力为自己的未来考虑")])]),e._v(" "),a("blockquote",[a("p",[e._v("我的博客地址 ："),a("a",{attrs:{href:"https://link.jianshu.com/?t=http%3A%2F%2Fwww.aymfx.cn%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.aymfx.cn/"),a("OutboundLink")],1)])]),e._v(" "),a("h3",{attrs:{id:"迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[e._v("#")]),e._v(" 迭代器")]),e._v(" "),a("blockquote",[a("p",[e._v("一个迭代器对象 ，知道如何每次访问集合中的一项， 并跟踪该序列中的当前位置。在  JavaScript 中 迭代器是一个对象，它提供了一个next() 方法，用来返回序列中的下一项。这个方法返回包含两个属性：done和 value。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//这是模仿es6迭代器的方式\n    function createIterator (items){\n        var i =0;\n        return {\n            next:function(){\n                var done = (i>=items.length);\n                var value = !done ? items[i++]:undefined;\n                \n                return {\n                    done:done,\n                    value:value\n                }\n            }\n        }\n    }\n    var iterator= createIterator([1,2,3]);\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    \n//{done: false, value: 1}\n//VM42:18 {done: false, value: 2}\n//VM42:19 {done: false, value: 3}\n//VM42:20 {done: true, value: undefined}\n//VM42:21 {done: true, value: undefined}\n\n")])])]),a("blockquote",[a("p",[e._v("这是个简单的es5的迭代器，在es6的迭代器更加复杂")])]),e._v(" "),a("h3",{attrs:{id:"什么是生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是生成器"}},[e._v("#")]),e._v(" 什么是生成器")]),e._v(" "),a("blockquote",[a("p",[e._v("虽然自定义的迭代器是一个有用的工具，但由于需要显式地维护其内部状态，因此需要谨慎地创建。Generators提供了一个强大的选择：它允许你定义一个包含自有迭代算法的函数， 同时它可以自动维护自己的状态。它是这样表示的")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//生成器\n\nfunction *createIterator(){\n    yield 1;\n    yield 2;\n    yield 3;\n    \n}\n//生成器的调用方式与普通函数相同，只不过返回的是一个迭代器\n var iterator= createIterator();\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n\n//{value: 1, done: false}\n//VM55:12 {value: 2, done: false}\n//VM55:13 {value: 3, done: false}\n\n")])])]),a("blockquote",[a("p",[e._v("每个yield相当于一个调用一次next方法，而且每次执行yield都会暂停一次。函数名前面的*代表它是一个生成器")])]),e._v(" "),a("blockquote",[a("p",[e._v("yield只能在生成器中用，不能在普通函数使用,生成器的内部函数也不能使用（语法错误），另外yield关键字可以返回任何值或者表达式")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function * createIterator(itmes){\n    for(let i = 0; i< items.length;i++){\n        yield items[i]\n    }\n}\n\nvar iterator= createIterator([1,2,3]);\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n\n//{value: 1, done: false}\n//VM98:8 {value: 2, done: false}\n//VM98:9 {value: 3, done: false}\n//VM98:10 {value: undefined, done: true}\n//VM98:11 {value: undefined, done: true}\n")])])]),a("h4",{attrs:{id:"生成函数表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成函数表达式"}},[e._v("#")]),e._v(" 生成函数表达式")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let createIterator = function *(items) {\n    for (let i = 0; i< items.length ; i++){\n        yield items[i];\n    }\n    \n}\n\nvar iterator= createIterator([1,2,3]);\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n    console.log(iterator.next());\n\n//VM108:10 {value: 1, done: false}\n//VM108:11 {value: 2, done: false}\n//VM108:12 {value: 3, done: false}\n//VM108:13 {value: undefined, done: true}\n//VM108:14 {value: undefined, done: true}\n\n")])])]),a("blockquote",[a("p",[e._v("不能用箭头函数来创建生成器")])]),e._v(" "),a("h4",{attrs:{id:"生成器对象的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成器对象的方式"}},[e._v("#")]),e._v(" 生成器对象的方式")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let o = {\n    createIterator:function *(items) {\n        for (let i = 0; i< items.length ; i++){\n        yield items[i];\n    }\n    }\n}\n\nlet o.createIterator([1,2,3])\n\n")])])]),a("blockquote",[a("p",[e._v("也可以用es6的写法")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let o = {\n    *createIterator(items) {\n        for (let i = 0; i< items.length ; i++){\n        yield items[i];\n    }\n    }\n}\n\nlet o.createIterator([1,2,3])\n\n\n")])])]),a("h4",{attrs:{id:"可迭代对象和for-of循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可迭代对象和for-of循环"}},[e._v("#")]),e._v(" 可迭代对象和for-of循环")]),e._v(" "),a("blockquote",[a("p",[e._v("es6中所有的集合对象（数组，Set集合以及Map集合）和字符串都是可迭代对象，可迭代对象都是具有Symbol.iterator属性，通过指定的函数可以返回一个作用于附属对象的迭代器")])]),e._v(" "),a("blockquote",[a("p",[e._v("由生成器创建的迭代器都是可迭代对象，因为它会默认为Symbol.iterator属性赋值。")])]),e._v(" "),a("blockquote",[a("p",[e._v("for -of 每次执行都会调用next()方法，并将返回的结果对象的value存储在变量中，直到遇到对象的done属性为true")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" let values = [1,2,3];\n\nfor(let value of values){\n      console.log(value);\n}\n\n//返回结果\n// 1\n// 2\n// 3\n")])])]),a("h4",{attrs:{id:"访问可迭代对象的默认的迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问可迭代对象的默认的迭代器"}},[e._v("#")]),e._v(" 访问可迭代对象的默认的迭代器")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let values = [1,2,3];\nlet iterator = values[Symbol.iterator]();\n\nconsole.log(iterator.next());\nconsole.log(iterator.next());\nconsole.log(iterator.next());\nconsole.log(iterator.next());\n\n//运行结果\n\n//{value: 1, done: false}\n//VM57:5 {value: 2, done: false}\n//VM57:6 {value: 3, done: false}\n//VM57:7 {value: undefined, done: true}\n")])])]),a("h3",{attrs:{id:"创建可以迭代的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建可以迭代的对象"}},[e._v("#")]),e._v(" 创建可以迭代的对象")]),e._v(" "),a("blockquote",[a("p",[e._v("默认情况下开发者定义的对象是不能迭代的，但是我们可以给Symbol.iterator属性加一个生成器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let arr = {\n      items:[],\n      *[Symbol.iterator](){\n          for(let item of this.items){\n        yield item;\n                                                        }\n                                            }\n}\nlet a = [1,2,3];\na.forEach(value => arr.items.push(value));\n\nfor(let x of arr){\n      console.log(x);\n }\n// 1\n//2\n//3\n")])])]),a("h3",{attrs:{id:"内建迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内建迭代器"}},[e._v("#")]),e._v(" 内建迭代器")]),e._v(" "),a("blockquote",[a("p",[e._v("es6自己定义了一些迭代器，我们只有在无法用这些内建迭代器实现功能时才可能自己创建")])]),e._v(" "),a("h4",{attrs:{id:"集合对象迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合对象迭代器"}},[e._v("#")]),e._v(" 集合对象迭代器")]),e._v(" "),a("blockquote",[a("p",[e._v("es6的三种对象数组，Set集合，Map集合都内置了下列三种迭代器")])]),e._v(" "),a("ul",[a("li",[e._v("entries() 返回一个迭代器，其值为多个键值对")]),e._v(" "),a("li",[e._v("values() 返回一个迭代器，其值为集合的值")]),e._v(" "),a("li",[e._v("keys() 返回一个迭代器，其值为集合中的所有键名")])]),e._v(" "),a("blockquote",[a("p",[e._v("entries()栗子 三种表现")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let colors = ['red','blue','green'];\nlet tracking = new Set([123,567,9012]);\nlet data = new Map();\ndata.set('title','es6教程');\ndata.set('format','ebook');\nfor (let entry of colors.entries()){\n      console.log(entry);\n}\nfor (let entry of tracking .entries()){\n      console.log(entry);\n}\nfor (let entry of data.entries()){\n      console.log(entry);\n}\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-ac216eee2bd7b0b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"运行结果"}})]),e._v(" "),a("blockquote",[a("p",[e._v("values()迭代器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let colors = ['red','blue','green'];\nlet tracking = new Set([123,567,9012]);\nlet data = new Map();\ndata.set('title','es6教程');\ndata.set('format','ebook');\nfor (let entry of colors.values()){\n      console.log(entry);\n}\nfor (let entry of tracking .values()){\n      console.log(entry);\n}\nfor (let entry of data.values()){\n      console.log(entry);\n}\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-3c3a015d2b46b429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("数组的values()谷歌暂不支持，所以我们需要小心使用这些方法，有的浏览器还是支持的，谷歌不支持我肯定不会用")])]),e._v(" "),a("blockquote",[a("p",[e._v("keys()迭代器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let colors = ['red','blue','green'];\nlet tracking = new Set([123,567,9012]);\nlet data = new Map();\ndata.set('title','es6教程');\ndata.set('format','ebook');\nfor (let entry of colors.keys()){\n      console.log(entry);\n}\nfor (let entry of tracking .keys()){\n      console.log(entry);\n}\nfor (let entry of data.keys()){\n      console.log(entry);\n}\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-ff3457147502690e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("不同的集合类型在使用for-of迭代有各自默认的迭代器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let colors = ['red','blue','green'];\nlet tracking = new Set([123,567,9012]);\nlet data = new Map();\ndata.set('title','es6教程');\ndata.set('format','ebook');\n\n//与colors.values()方法相同\nfor(let value of colors){\n  console.log(value);\n}\n\n//与tracking .values()方法相同\nfor(let value of tracking ){\n  console.log(value);\n}\n\n//与data.entries()方法相同\nfor(let value of data){\n  console.log(value);\n}\n\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-5db145e4054950f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("WeakMap和WekSet因为需要管理弱引用，因此无法切确知道集合中存在的值，所以不能被迭代")])]),e._v(" "),a("h4",{attrs:{id:"解构的方式来用for-of"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解构的方式来用for-of"}},[e._v("#")]),e._v(" 解构的方式来用for-of")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let data = new Map();\ndata.set('title','es6教程');\ndata.set('format','ebook');\n\nfor(let [key,value] of  data){\n  console.log(key+\":\"+value);\n}\n\n//title:es6教程\n//format:ebook\n")])])]),a("h3",{attrs:{id:"字符串迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串迭代器"}},[e._v("#")]),e._v(" 字符串迭代器")]),e._v(" "),a("blockquote",[a("p",[e._v("es5发布以后，字符串的慢慢变的像数组，于是我们有些方式可以用了，例如我们可以通过[]来获取字符串的中的字符。但是我们怎么访问双字节，就如下面这种情况")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var message = 'A 𠮷 B';\nfor(let i = 0;i<message.length;i++){\n  console.log(message[i]);\n}\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-057bb5d93c53e471.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("我们可以用 for-of来做迭代")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var message = 'A𠮷B';\nfor(let i of message){\n  console.log(i);\n}\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-227069880ae816f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("h3",{attrs:{id:"nodelist迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodelist迭代器"}},[e._v("#")]),e._v(" NodeList迭代器")]),e._v(" "),a("blockquote",[a("p",[e._v("虽然在es6之前Nodelist和数组在内部差异表现不一致，容易造成困扰，但是es6之后，nodelist也有了自己的默认的迭代器，并且实现方式一致，因此我们可以这样写了")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var divs = document.getElementsByTagName('div');\n\nfor(let nodeEle of divs){\n  console.log(nodeEle);\n}\n\n")])])]),a("h3",{attrs:{id:"展开运算符与非数组可迭代对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展开运算符与非数组可迭代对象"}},[e._v("#")]),e._v(" 展开运算符与非数组可迭代对象")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//Set\nlet set = new Set([1,3,3,5,6]),arr = [...set];\nconsole.log(arr); // [1, 3, 5, 6]\n\n//Map\nlet map= new Map([['name','ly'],['sex','男']]),arr = [...map];\nconsole.log(arr); \n //0:(2) [\"name\", \"ly\"]\n//1:(2) [\"sex\", \"男\"]\n\n//数组字面量\nlet small = [1,2.3,4],mid = [2,3,4,6],all = [0,...small,...mid];\nconsole.log(all); //[0, 1, 2.3, 4, 2, 3, 4, 6]\n")])])]),a("h3",{attrs:{id:"高级迭代器功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级迭代器功能"}},[e._v("#")]),e._v(" 高级迭代器功能")]),e._v(" "),a("blockquote",[a("p",[e._v("给迭代器传参数")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function *createIterator(){\n    let first = yield 1;\n    let second = yield first+2;\n    let third= yield second +3;\n}\nlet iterator = createIterator();\nconsole.log(iterator.next(1));\nconsole.log(iterator.next(2));\nconsole.log(iterator.next(3));\nconsole.log(iterator.next(1));\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-2346da44ba0629fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("第一个next和最后一个next,传的值都会被丢弃，因为之前和之后都不存在可以用的值，所以传参毫无意义，每次传的参数都是作为上一个定义参数的值.")])]),e._v(" "),a("h3",{attrs:{id:"在迭代器中抛出错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在迭代器中抛出错误"}},[e._v("#")]),e._v(" 在迭代器中抛出错误")]),e._v(" "),a("blockquote",[a("p",[e._v("有时候我们需要增强生成器内部的编程弹性，需要将一些错误抛出去，让迭代器继续运行。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('function *createIterator(){\n    let first = yield 1;\n    let second = yield first+2;\n    let third= yield second +3;\n}\nlet iterator = createIterator();\nconsole.log(iterator.next(1));\nconsole.log(iterator.next(4));\nconsole.log(iterator.throw(new Error("boom")));\n')])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-37f34e63ac70e131.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("我们如何处理这些错误呢，可以这么写")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('function *createIterator(){\n    let first = yield 1;\n    let second;\n    try{\n      second = yield first+2;\n}catch(x){\n    second = 3\n}\n   yield second +3;\n}\nlet iterator = createIterator();\nconsole.log(iterator.next(1));\nconsole.log(iterator.next(4));\nconsole.log(iterator.throw(new Error("boom")));\nconsole.log(iterator.next());\n\n')])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-45c1a600797830a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("h4",{attrs:{id:"通过return-可以提前结束函数的执行-再一次调用-属性done将会被置为true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过return-可以提前结束函数的执行-再一次调用-属性done将会被置为true"}},[e._v("#")]),e._v(" 通过return 可以提前结束函数的执行，再一次调用，属性done将会被置为true")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" function *createIterator(){\n        yield 1;\n        return;\n        yield 2;\n        yield 3;\n}\nlet iterator = createIterator();\nconsole.log(iterator .next());\nconsole.log(iterator .next());\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-0b7221c96e78f887.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("blockquote",[a("p",[e._v("return 返回的值也可以作为一次执行的结果")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" function *createIterator(){\n        yield 1;\n        return 20;\n        yield 2;\n        yield 3;\n}\nlet iterator = createIterator();\nconsole.log(iterator .next());\nconsole.log(iterator .next());\nconsole.log(iterator .next());\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-af97635a515ca02a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("h3",{attrs:{id:"委托生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#委托生成器"}},[e._v("#")]),e._v(" 委托生成器")]),e._v(" "),a("blockquote",[a("p",[e._v("如果我们需要将两个迭代器分别执行，但是又想只调用一个同样的生成器，我们可以用委托生成器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function *createIteratorOne(){\n        yield 1;\n        yield 2;\n}\nfunction *createIteratorTwo(){\n        yield 'blue';\n        yield ';white';\n}\n\n function *createIterator(){\n        yield *createIteratorOne();\n          yield *createIteratorTwo();\n}\nlet iterator = createIterator();\nconsole.log(iterator .next());\nconsole.log(iterator .next());\nconsole.log(iterator .next());\n")])])]),a("blockquote",[a("p",[e._v("yield * 也可以用于字符串 例如 yield * 'hello',这时会调用字符串的默认迭代器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" function *createIterator(){\n       yield * 'hello'\n}\nlet iterator = createIterator();\nconsole.log(iterator .next());\nconsole.log(iterator .next());\nconsole.log(iterator .next());\n")])])]),a("p",[a("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10843623-e847af8781dfa3e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"a.png"}})]),e._v(" "),a("h3",{attrs:{id:"异步任务执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步任务执行"}},[e._v("#")]),e._v(" 异步任务执行")]),e._v(" "),a("blockquote",[a("p",[e._v("生成器支持在代码中暂停代码的执行，因此我们可以挖掘一些用法")])]),e._v(" "),a("h4",{attrs:{id:"简单任务生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单任务生成器"}},[e._v("#")]),e._v(" 简单任务生成器")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function run(taskDef){\n    //创建一个无使用限制的迭代器\n    let task = taskDef();\n    //开始执行任务\n    let result = task.next();\n    //循环调用next()的函数\n    function step(){\n        if(!result.done){\n                result = task.next();\n                 step();\n        }\n}\n//开始执行迭代\n  step();\n}\n\n//调用run()函数\nrun(function *(){\n      console.log(1);\n        yield;\n      console.log(2);\n        yield;\n      console.log(3);\n})\n\n//逐步输出 1 2 3\n")])])]),a("p",[e._v("####向任务执行器传递数据")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function run(taskDef){\n    //创建一个无使用限制的迭代器\n    let task = taskDef();\n    //开始执行任务\n    let result = task.next();\n    //循环调用next()的函数\n    function step(){\n        if(!result.done){\n                result = task.next(result.value);\n                 step();\n        }\n}\n//开始执行迭代\n  step();\n}\n\n//调用run()函数\nrun(function *(){\n    let value =  yield 1;\n    console.log(value );\n    value =  yield value + 1;\n    console.log(value );\n})\n\n//逐步输出 1 2 \n")])])]),a("h4",{attrs:{id:"异步任务执行器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步任务执行器"}},[e._v("#")]),e._v(" 异步任务执行器")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('function run(taskDef){\n    //创建一个无使用限制的迭代器\n    let task = taskDef();\n    //开始执行任务\n    let result = task.next();\n    //循环调用next()的函数\n    function step(){\n        if(!result.done){\n                if(typeof result.value ===\'function\'){\n                         result.value(function(err,data){\n                          if(err){result = task.throw(err)};\n                          return;\n})\n                } else {\n               result = task.next();\n                 step();\n}\n               \n        }\n}\n//开始执行迭代\n  step();\n}\n\n//读取文件函数\nlet fs = require("fs");\n\nfunction readFile(filename){\n        return function(callback){\n                fs.readFile(filename.,callback)\n}\n}\n\n//调用\nrun(function *(){\n        let contents = yield readFile("config.json");\n         doSomethingWith(contents);\n          console.log("Done")\n})\n\n')])])])])}),[],!1,null,null,null);t.default=o.exports}}]);