(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{636:function(n,t,e){"use strict";e.r(t);var s=e(6),i=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("blockquote",[e("p",[n._v("react-Conditional Rendering")])]),n._v(" "),e("h1",{attrs:{id:"条件渲染-通过某些条件加载不同功能的组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件渲染-通过某些条件加载不同功能的组件"}},[n._v("#")]),n._v(" 条件渲染，通过某些条件加载不同功能的组件")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("class Toggle extends Component{\n     constructor(props){\n         super(props)\n         this.state = {isToggleOn:true}\n     // This binding is necessary to make `this` work in the callback\n     //     this.handleClick = this.handleClick.bind(this)\n     }\n\n     /*handleClick(){\n         // var that = this;\n         this.setState(prevState =>({\n             isToggleOn:!prevState.isToggleOn\n         }));\n     }*/\n\n    handleClick = () =>{\n        this.setState(prevState =>({\n            isToggleOn:!prevState.isToggleOn\n        }));\n    }\n\n     render(){\n        if(this.state.isToggleOn){\n            return (\n                <div>\n                    <button onClick={this.handleClick}>\n                        {this.state.isToggleOn ? 'ON' : 'OFF'}\n                    </button>\n                    <UserGreeting/>\n\n                </div>\n            )\n        }else{\n            return (\n                <div>\n                    <button onClick={this.handleClick}>\n                        {this.state.isToggleOn ? 'ON' : 'OFF'}\n                    </button>\n                    <GuestGreeting/>\n\n                </div>\n            )\n        }\n     }\n}\n\nfunction UserGreeting(props) {\n    return (\n        <div>\n            <h1>\n                Welcome back!\n            </h1>\n        </div>\n    )\n}\n\nfunction GuestGreeting(props) {\n    return (\n        <div>\n            <h1>\n                sign up\n            </h1>\n        </div>\n    )\n}\n")])])]),e("h1",{attrs:{id:"element-variables-元素变量-通过条件展示适合的组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#element-variables-元素变量-通过条件展示适合的组件"}},[n._v("#")]),n._v(" Element Variables 元素变量 通过条件展示适合的组件")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("class LoginControl extends Component {\n     constructor(props){\n         super(props)\n         this.handleLoginClick = this.handleLoginClick.bind(this);\n         this.handleLogoutClick = this.handleLogoutClick.bind(this);\n         this.state = {isLoggedIn:false}\n     }\n\n     handleLoginClick() {\n         this.setState({isLoggedIn:true})\n     }\n    handleLogoutClick(){\n         this.setState({isLoggedIn:false})\n    }\n\n    render(){\n        const isLoggedIn = this.state.isLoggedIn;\n\n        let button = null;\n\n        if(isLoggedIn) {\n            button = <LogoutButton onClick ={this.handleLogoutClick} />\n        }else{\n            button = <LoginButton onClick ={this.handleLoginClick} />\n        }\n\n        return (\n            <div>\n                <Greeting isLoggedIn={isLoggedIn} />\n                {button}\n            </div>\n        )\n    }\n}\n\nfunction UserGreeting() {\n    return <h1>Welcome back!</h1>\n}\n\nfunction GuestGreeting() {\n    return <h1>please sign up</h1>\n}\n\nfunction Greeting(props) {\n    const isLoggedIn = props.isLoggedIn;\n    if(isLoggedIn){\n        return <UserGreeting/>\n    }\n        return <GuestGreeting/>\n}\n\nfunction LoginButton(props) {\n    return (\n        <button onClick={props.onClick}>\n            Login\n        </button>\n    )\n}\n\nfunction LogoutButton(props) {\n    return (\n        <button onClick={props.onClick}>\n            logout\n        </button>\n    )\n}\n")])])]),e("h1",{attrs:{id:"inline-if-with-logical-operator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inline-if-with-logical-operator"}},[n._v("#")]),n._v(" Inline If with Logical && Operator")]),n._v(" "),e("blockquote",[e("p",[n._v("在 jsx 中可以插入任何表达式在花括号中，当然也包括元素")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function Mailbox (props) {\n    const unreadMessages  = props.unreadMessages;\n    return (\n        <div>\n            <h1>\n                Hello!\n            </h1>\n            {\n                unreadMessages.length >2 &&\n                    <h2>\n                        you have {unreadMessages.length} unread messages.\n                    </h2>\n            }\n            //表达式为真输出元素\n        </div>\n    )\n}\n\nconst messages = ['React','re:react','react:React'];\n")])])]),e("h1",{attrs:{id:"nline-if-else-with-conditional-operator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nline-if-else-with-conditional-operator"}},[n._v("#")]),n._v(" nline If-Else with Conditional Operator")]),n._v(" "),e("blockquote",[e("p",[n._v("改写上面的例子")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("class LoginControl extends Component {\n     constructor(props){\n         super(props)\n         this.handleLoginClick = this.handleLoginClick.bind(this);\n         this.handleLogoutClick = this.handleLogoutClick.bind(this);\n         this.state = {isLoggedIn:false}\n     }\n\n     handleLoginClick() {\n         this.setState({isLoggedIn:true})\n     }\n    handleLogoutClick(){\n         this.setState({isLoggedIn:false})\n    }\n\n    render(){\n        const isLoggedIn = this.state.isLoggedIn;\n\n        let button = null;\n\n        /*if(isLoggedIn) {\n            button = <LogoutButton onClick ={this.handleLogoutClick} />\n        }else{\n            button = <LoginButton onClick ={this.handleLoginClick} />\n        }*/\n\n        return (\n            <div>\n                <Greeting isLoggedIn={isLoggedIn} />\n                {\n                    isLoggedIn ? (<LogoutButton onClick ={this.handleLogoutClick} />) :\n                        (<LoginButton onClick ={this.handleLoginClick} />)\n                }\n            </div>\n        )\n    }\n}\n")])])]),e("h1",{attrs:{id:"preventing-component-from-rendering-阻止组件的渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preventing-component-from-rendering-阻止组件的渲染"}},[n._v("#")]),n._v(" Preventing Component from Rendering 阻止组件的渲染")]),n._v(" "),e("p",[n._v("//阻止组件的渲染")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function WaringBanner(props) {\n    if(!props.warn){\n        console.log(\"nihao \");\n        return null;\n    }\n\n    return (<div className=\"waring\">警告</div>)\n}\n\nclass Page extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {showWarning:true}\n        this.handleToggleClick = this.handleToggleClick.bind(this);\n    }\n\n    handleToggleClick() {\n        this.setState(\n            prevState =>({\n                showWarning:!prevState.showWarning\n            })\n        )\n    }\n    render (){\n        return (<div>\n            <WaringBanner warn={this.state.showWarning}/>\n            <button onClick={this.handleToggleClick}>\n                {this.state.showWarning ? 'Hide' : 'Show'}\n            </button>\n        </div>)\n    }\n}\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);