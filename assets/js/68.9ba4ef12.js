(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{582:function(v,_,l){"use strict";l.r(_);var i=l(6),a=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"javascript变量"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#javascript变量"}},[v._v("#")]),v._v(" JavaScript变量")]),v._v(" "),l("h2",{attrs:{id:"命名"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[v._v("#")]),v._v(" 命名")]),v._v(" "),l("h3",{attrs:{id:"方法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[v._v("#")]),v._v(" 方法")]),v._v(" "),l("ul",[l("li",[v._v("匈牙利命名法：变量名=类型+对象描述\n"),l("ul",[l("li",[v._v("Int整形 i")]),v._v(" "),l("li",[v._v("Float浮点 fl")]),v._v(" "),l("li",[v._v("Boolean布尔 b")]),v._v(" "),l("li",[v._v("String字符串 s")]),v._v(" "),l("li",[v._v("Array数组\ta")]),v._v(" "),l("li",[v._v("Object对象 o")]),v._v(" "),l("li",[v._v("Function函数 fn")]),v._v(" "),l("li",[v._v("Regular Expressino 正则  re")])])]),v._v(" "),l("li",[v._v("驼峰命名法\n"),l("ul",[l("li",[v._v("全部小写：单词与单词用下划线分割")]),v._v(" "),l("li",[v._v("大小写混合\n"),l("ul",[l("li",[v._v("大驼峰:每个首字母大写")]),v._v(" "),l("li",[v._v("小驼峰:第一个单词首字母小写，其他首字母大写")])])])])])]),v._v(" "),l("h3",{attrs:{id:"规则"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[v._v("#")]),v._v(" 规则")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("首字符:英文或者下滑线或者$符号")]),v._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[v._v(' \t var $a="asd";\n\n \t alert($a);\n')])])])]),v._v(" "),l("li",[l("p",[v._v("组成：英文字母，数字，下划线 $符号")])]),v._v(" "),l("li",[l("p",[v._v("禁忌：不能使用关键字和保留字")])])]),v._v(" "),l("h2",{attrs:{id:"声明"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[v._v("#")]),v._v(" 声明")]),v._v(" "),l("ul",[l("li",[v._v("显示声明：var 变量名")]),v._v(" "),l("li",[v._v("陋习\n"),l("ul",[l("li",[v._v("没有类型")]),v._v(" "),l("li",[v._v("重复声明")]),v._v(" "),l("li",[v._v("隐式声明")]),v._v(" "),l("li",[v._v("不声明直接赋值")])])]),v._v(" "),l("li",[v._v("正解\n"),l("ul",[l("li",[v._v("先声明，后读写")]),v._v(" "),l("li",[v._v("先赋值，后运算")])])])]),v._v(" "),l("h2",{attrs:{id:"变量类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[v._v("#")]),v._v(" 变量类型")]),v._v(" "),l("ul",[l("li",[v._v("值类型\n"),l("ul",[l("li",[v._v("占用空间固定，保存在栈中")]),v._v(" "),l("li",[v._v("保存与复制的是值本身")]),v._v(" "),l("li",[v._v("使用typeof检测数据的类型")]),v._v(" "),l("li",[v._v("基本数据类型是值类型")])])]),v._v(" "),l("li",[v._v("引用类型\n"),l("ul",[l("li",[v._v("占用空间不固定，保存在堆中")]),v._v(" "),l("li",[v._v("保存和赋值的是指向对象的指针")]),v._v(" "),l("li",[v._v("使用instanceof检测数据类型")]),v._v(" "),l("li",[v._v("使用new()方法构造出的对象是引用类型")])])])]),v._v(" "),l("h2",{attrs:{id:"作用域"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[v._v("#")]),v._v(" 作用域")]),v._v(" "),l("ul",[l("li",[v._v("全局变量\n"),l("ul",[l("li",[v._v("包含\n"),l("ul",[l("li",[v._v("在函数体外定义的变量")]),v._v(" "),l("li",[v._v("在函数内部定义的无var的变量")])])]),v._v(" "),l("li",[v._v("调用:任何位置")])])]),v._v(" "),l("li",[v._v("局部变量\n"),l("ul",[l("li",[v._v("包含\n"),l("ul",[l("li",[v._v("在函数内使用var声明的变量")]),v._v(" "),l("li",[v._v("函数的参数变量")])])]),v._v(" "),l("li",[v._v("调用：在当前函数体内使用")])])]),v._v(" "),l("li",[v._v("优先级\n"),l("ul",[l("li",[v._v("局部同名变量>局部同名参数>全局同名变量")])])]),v._v(" "),l("li",[v._v("特性\n"),l("ul",[l("li",[v._v("忽略块级作用域")]),v._v(" "),l("li",[v._v("全局变量是全局对象的属性")]),v._v(" "),l("li",[v._v("局部变量是调用对象的属性")]),v._v(" "),l("li",[v._v("作用域链\n"),l("ul",[l("li",[v._v("内层函数可以访问外层函数的局部变量")]),v._v(" "),l("li",[v._v("外层函数不能访问内层函数的局部变量")])])]),v._v(" "),l("li",[v._v("生命周期\n"),l("ul",[l("li",[v._v("全局变量：除非被显示删除，否则一直存在")]),v._v(" "),l("li",[v._v("局部变量：自声明起至函数运行完毕或显示删除")]),v._v(" "),l("li",[v._v("回收机制\n"),l("ul",[l("li",[v._v("标记清除")]),v._v(" "),l("li",[v._v("引用计数")])])])])])])])])])}),[],!1,null,null,null);_.default=a.exports}}]);