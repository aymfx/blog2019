(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{561:function(e,n,a){"use strict";a.r(n);var t=a(6),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("blockquote",[a("p",[e._v("离回家的时间越来越近了，突然觉得自己很差劲，分享一首歌，道出心声啊")])]),e._v(" "),a("blockquote",[a("p",[e._v("我的博客地址 ：http://www.aymfx.cn/")])]),e._v(" "),a("iframe",{attrs:{frameborder:"no",border:"0",marginwidth:"0",marginheight:"0",width:"330",height:"86",src:"//music.163.com/outchain/player?type=2&id=518904754&auto=1&height=66"}}),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("大概过去的就真的已过去\n偶尔想起还有几分怀念气息\n遇上快乐遇上心酸遇上分离\n生活终究得让人继续\n衣身太长遮住大半个身体\n学不会平淡幸福无从说起\n可到最后 原谅背叛原谅任性\n其实该原谅眼里的自己\n那年的自己讨厌的自己如今的自己\n风一直不停\n乱了旅行 残喘下去\n我除了祝福你没有其他目的\n但却害怕往事再重提\n\n大概过去的就真的已过去\n偶尔想起还有几分怀念气息\n遇上快乐遇上心酸遇上分离\n生活终究得让人继续\n衣身太长遮住大半个身体\n学不会平淡幸福无从说起\n可到最后 原谅背叛原谅任性\n其实该原谅眼里的自己\n那年的自己讨厌的自己如今的自己\n风一直不停\n乱了旅行 残喘下去\n我除了祝福你没有其他目的\n但却害怕往事再重提\n我安慰我自己 恨自己 伤感记忆\n只能用意志慢慢的去抚平冬季\n我除了祝福你没有其他目的\n我也可以带着青涩 美好回忆\n\n")])])]),a("h3",{attrs:{id:"set-对象允许你存储任何类型的唯一值-无论是原始值或者是对象引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-对象允许你存储任何类型的唯一值-无论是原始值或者是对象引用"}},[e._v("#")]),e._v(" Set 对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用")]),e._v(" "),a("blockquote",[a("p",[e._v("创建Set集合并添加元素,对于字符串和数字不会发生强制转换，因此时两个值")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\nlet set = new Set();\n\nset.add(5)\nset.add('5')\n\nconsole.log(set.size) //2\n\n")])])]),a("blockquote",[a("p",[e._v("对象如果做属性名的话，es5中会发生这种事")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var set = Object.create(null);\nvar obj1 = {};\nvar obj2 = {};\n\nset[obj1] = 'foo'\n\nconsole.log(set[obj2])  //foo 因为不能识别对象他们全部转换成这个了 [object object]\n\n\n\nlet set = new Set(),\n    key1 = {},\n    key2 = {};\n\nset.add(key1)\nset.add(key2)\n\nconsole.log(set.size) //2 说明不是调用tostring方法\n\n\n")])])]),a("blockquote",[a("p",[e._v("set是会忽略重复值的")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let set = new Set();\nset.add(5)\nset.add(5)\nset.add('5')\nset.add(5)\n\nconsole.log(set.size) //2\n\n")])])]),a("blockquote",[a("p",[e._v("利用has() 检查值是否存在  清除所有元素 clear()")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let set = new Set();\nset.add('5')\nset.add('6')\nset.add('7')\nconsole.log(set.has('5')) // true\nconsole.log(set.has(5)) //false\n\n\nset.clear();\nconsole.log(set.has('6')) false\n\n")])])]),a("blockquote",[a("p",[e._v("移除元素")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let set = new Set();\nset.add('5')\nset.add('6')\nconsole.log(set.has('5')) // true\nset.delete('5') //false\nconsole.log(set.has('5')) //false\n\n")])])]),a("blockquote",[a("p",[e._v("使用Foreach循环,他和数组的方式的基本一样，我们来看看栗子，他们的不同")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var arr = new Array(1,2,3,4),\n    set = new Set([1,2,3,4]);\n\nlet pocess = {\n    output (value,index) {\n        console.log(value,index);\n    },\n    \n    arrObj (arr) {\n        arr.forEach((value,index,own) => {\n            this.output(value,index);\n            console.log(arr === own);\n        },this)\n    },\n    \n    setObj (arr) {\n        arr.forEach((value,index,own) => {\n            this.output(value,index);\n            console.log(arr === own);\n        },this)\n    }\n}\n\npocess.arrObj(arr)\npocess.setObj(set)\n\n//第一种结果\n\nVM163:0 1 0\nVM163:12 true\nVM163:6 2 1\nVM163:12 true\nVM163:6 3 2\nVM163:12 true\nVM163:6 4 3\nVM163:12 true\n\n//第二种结果\n\nVM173: 12 1 1\nVM173:19 true\nVM173:6 2 2\nVM173:19 true\nVM173:6 3 3\nVM173:19 true\nVM173:6 4 4\nVM173:19 true\n\n\n")])])]),a("blockquote",[a("p",[e._v("将Set集合转换成数组，下列演示去重")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//第一种方式\n\nlet set = new Set([1,5,58,6,7,8,9,5]),\n    arr = [...set];\nconsole.log(arr); //[1, 5, 58, 6, 7, 8, 9]\n\n//第二种\n\nconsole.log(Array.from(new Set([1,5,58,6,7,8,9,5]))); // [1, 5, 58, 6, 7, 8, 9]\n\n\n")])])]),a("h4",{attrs:{id:"weak-set集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weak-set集合"}},[e._v("#")]),e._v(" Weak Set集合")]),e._v(" "),a("blockquote",[a("p",[e._v("set 是一个强引用集合，不信看栗子")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let set = new Set(),\n    key = {};\n    \n\n    \nset.add(key);\nconsole.log(set.size); //1\n//移除原始引用\nkey = null;\n\nconsole.log(set.size); //1\n\n//重新取回引用\n\nkey = [...set][0]; //{}\n\n")])])]),a("blockquote",[a("p",[e._v("这种情况会造成内存的泄露，所以我们可以用以下的方法，弱引用的Set集合")])]),e._v(" "),a("h4",{attrs:{id:"创建weak-set集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建weak-set集合"}},[e._v("#")]),e._v(" 创建Weak Set集合")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let set = new WeakSet(),\n    key = {};\n\n//向集合set添加对象\nset.add(key);\nconsole.log(set.has(key)); //true\n\nset.delete(key)\nconsole.log(set.has(key)); //false\n\n")])])]),a("blockquote",[a("p",[e._v("我们试试这个")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let set = new WeakSet(),\n    key = {};\n    \n\n    \nset.add(key);\nconsole.log(set.has(key)); //true set.size不能用在weakset\n//移除原始引用\nkey = null;\n\nconsole.log(set.has(key)); //false\n\n\n")])])]),a("h4",{attrs:{id:"两者的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两者的不同"}},[e._v("#")]),e._v(" 两者的不同")]),e._v(" "),a("blockquote",[a("p",[e._v("WeakSet 对象中只能存放对象引用, 不能存放值, 而 Set 对象都可以.")])]),e._v(" "),a("blockquote",[a("p",[e._v("WeakSet 对象中存储的对象值都是被弱引用的, 如果没有其他的变量或属性引用这个对象值, 则这个对象值会被当成垃圾回收掉. 正因为这样, WeakSet 对象是无法被枚举的, 没有办法拿到它包含的所有元素")])]),e._v(" "),a("blockquote",[a("p",[e._v("WeakSet 不可迭代 于是 for of foreach keys() values() 方法都没有")])]),e._v(" "),a("h4",{attrs:{id:"map集合-map-对象保存键值对。任何值-对象或者原始值-都可以作为一个键或一个值。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map集合-map-对象保存键值对。任何值-对象或者原始值-都可以作为一个键或一个值。"}},[e._v("#")]),e._v(" Map集合  Map 对象保存键值对。任何值(对象或者原始值) 都可以作为一个键或一个值。")]),e._v(" "),a("blockquote",[a("p",[e._v("基本用法")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let map = new Map(),\n    key1 = {},\n    key2 = {};\n\nmap.set('name','ly')\nmap.set(key1,\"ly1\")\nmap.set(key2,'2')\n\nconsole.log(map.get('name'),map.get(key1),map.get(key2)); //ly ly1 2\n\n")])])]),a("blockquote",[a("p",[e._v("Map集合支持的方法")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let map = new Map(),\n    key1 = {},\n    key2 = {};\n\nmap.set('name','ly')\nmap.set(key1,\"ly1\")\nmap.set(key2,'2')\n\nconsole.log(map.size);  //3\n\nconsole.log(map.has(key2)); //true\nconsole.log(map.get(key2));2\n\nmap.delete(key2)\nconsole.log(map.has(key2)); //false\n\nmap.clear()\nconsole.log(map.has(key1)); //false\nconsole.log(map.size);  //0\n\n\n")])])]),a("blockquote",[a("p",[e._v("Map集合的初始化方法,可以传一个数组，数组包含一个个子数组，子数组包含两个值，键和值")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let map = new Map([[\"name\",'ly'],[\"age\",'18']]);\n\nconsole.log(map.has('name')); //true\nconsole.log(map.get('name')); //ly\nconsole.log(map.size);  //2\n")])])]),a("blockquote",[a("p",[e._v("可以使用ForEach()")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let map = new Map([["name",\'ly\'],["age",\'18\']]);\n\nmap.forEach((value,key,own) => {\n    console.log(value,key,own);\n})\n\n//ly name Map(2) {"name" => "ly", "age" => "18"}\n\n18 age Map(2) {"name" => "ly", "age" => "18"}\n\n')])])]),a("h3",{attrs:{id:"weakmap-对象是一组键-值对的集合-其中的键是弱引用的。其键必须是对象-而值可以是任意的。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap-对象是一组键-值对的集合-其中的键是弱引用的。其键必须是对象-而值可以是任意的。"}},[e._v("#")]),e._v(" WeakMap 对象是一组键/值对的集合，其中的键是弱引用的。其键必须是对象，而值可以是任意的。")]),e._v(" "),a("blockquote",[a("p",[e._v("适用场景 保存dom元素对象，便于销毁和创建")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let map = new WeakMap(),\n    ele = document.querySelector('div')[0];\n\nmap.set(ele,'Original');\n\nlet value = map.get('ele') \n\nconsole.log(value); //Original\n\n\nele.parentNode.removeChild(ele);\n\nele = null;\n\n")])])]),a("blockquote",[a("p",[e._v("WeakMap支持的方法")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let key1 = {},\n    key2 = {},\n    map = new WeakMap([[key1,'ly'],[key2,'18']]);\n    \n    console.log(map.has(key1)); //true\n    console.log(map.get(key1)); //ly\n    map.delete(key1)\n    console.log(map.has(key1)); //false\n    console.log(map.get(key1)); //undefined\n\n")])])]),a("blockquote",[a("p",[e._v("私有对象数据")])]),e._v(" "),a("blockquote",[a("p",[e._v("es5创建接近有私有数据的对象")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var Person = (function(){\n    var privateData = {},\n        privateId = 0;\n    function Person(name){\n        Object.defineProperty(this,"_id",{value:privateId++})\n        privateData[this._id] = {\n            name:name\n        }\n    }\n    \n    Person.prototype.getName = function(){\n        return privateData[this._id].name\n    }\n    \n    return Person\n}())\n\n')])])]),a("blockquote",[a("p",[e._v("这种方式的弊端就是对象数据永远不会消失,而WeakUp可以处理这种情况")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let Person = (function(){\n    let privateData = new WeakMap();\n    function Person(name){\n        privateData.set(this,{name:name})\n    }\n    \n    Person.prototype.getName = function(){\n        return privateData.get(this).name\n    }\n    \n    return Person\n}())\n\n\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);