(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{644:function(n,a,e){"use strict";e.r(a);var s=e(6),t=Object(s.a)({},(function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("blockquote",[e("p",[n._v("Sass 的学名叫“CSS 预处理器”，就是在 CSS 的基础上，引入了变量、嵌套、mixin（混合）、运算以及函数等功能，增加了代码的灵活性，可以让我们以更少的代码实现同样的效果，而且代码的整洁度、可读性更强。")])]),n._v(" "),e("h3",{attrs:{id:"环境-参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境-参考"}},[n._v("#")]),n._v(" 环境 参考")]),n._v(" "),e("blockquote",[e("p",[n._v("我是放在 vue 脚手架中操作的，不需要装，大致的语法是一样的，编译参考上文")])]),n._v(" "),e("blockquote",[e("p",[n._v("本文是参考 Sass 中文网的，我只是个精简版的")])]),n._v(" "),e("blockquote",[e("p",[n._v("Sass 中文网")])]),n._v(" "),e("h4",{attrs:{id:"使用变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[n._v("#")]),n._v(" 使用变量")]),n._v(" "),e("blockquote",[e("p",[n._v("变量声明用 $作为前缀")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('$text-Size = 30px;\n\n$plain-font: "Myriad Pro"、Myriad、"Helvetica Neue"、Helvetica、"Liberation Sans"、Arial和sans-serif; sans-serif;\n\n$hight-color:#fff;\n')])])]),e("h4",{attrs:{id:"变量使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量使用"}},[n._v("#")]),n._v(" 变量使用")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('编译前:\n  $h1-Size:36px;\n  $plain-font: "Myriad Pro",Myriad,"Helvetica Neue",Helvetica,"Liberation Sans",Arial和sans-serif,sans-serif;\n  $h1-color:#f99;\n  h1{\n    font-size: $h1-Size;\n    font-family: $plain-font;\n    color: $h1-color;\n  }\n\n编译后:\nfont-size: 36px;\nfont-family: "Myriad Pro", Myriad, "Helvetica Neue", Helvetica, "Liberation Sans", Arial和sans-serif, sans-serif;\ncolor: #f99;\n\n')])])]),e("blockquote",[e("p",[n._v("可能看起来代码量反而增多了，但是在写大型项目的时候会让我们加快速度编码 $link-color与$ink_color 指向的是同一变量，使用时小心")])]),n._v(" "),e("h3",{attrs:{id:"嵌套规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌套规则"}},[n._v("#")]),n._v(" 嵌套规则")]),n._v(" "),e("blockquote",[e("p",[n._v("大家肯定经历过这种事情")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('.container h1{}\n  .container a{}\n  .container img{}\n  .container span{}\n  .container div{}\n//需要重复写同一个选择器\nsass的嵌套可以避免这种情况\n  $box-size:600px;\n  // $box-background:$h1-color-125;   //颜色可以进行加减乘除 但是变量一定要先声明在使用啊\n  $h1-Size:36px;\n  $plain-font: "Myriad Pro",Myriad,"Helvetica Neue",Helvetica,"Liberation Sans",Arial和sans-serif,sans-serif;\n  $h1-color:#f99;\n  $h1_color:#99d;\n  $box-background:$h1-color - 100;\n  #container{\n    background: $box-background;\n    height: $box-size;\n    width: $box-size;\n    margin: 0 auto;\n    h1{\n    font-size: $h1-Size;\n    font-family: $plain-font;\n    color: $h1-color;\n    text-align: center;\n    }\n    ul{\n      font-size: 24px;\n      text-align: center;\n      & > li{  //&表示父级元素 最靠近他的那个\n        color: #fff;\n        a{\n          text-decoration: underline;\n&:hover{\ncolor:#f999;\ntext-decoration:none;\n}\n        }\n      }\n    }\n  }\n群组选择器的嵌套\n#container{\ndiv,span.ul{color:#f88;}\n}\n这种嵌套不要超过三层，不然降低网站的浏览速度\n\n配合 > + ~ 三种选择器\narticle {\n~artlice {color:#f99}\n> section {background:#f00;}\ndl > {\ndt{color:#f99}\n}\n}\n嵌套属性\n nav {\nborder: {\nstyle:solid;\nwidth:1px;\ncolor:#9ff;\n}\n}\n& 表示 父级元素也可以这样用\n编译前\n\n#main {\n  color: black;\n  &-sidebar { border: 1px solid; }\n}\n编译后\n\n#main {\n  color: black; }\n  #main-sidebar {\n    border: 1px solid; }\n\n')])])]),e("h4",{attrs:{id:"导入-sass-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入-sass-文件"}},[n._v("#")]),n._v(" 导入 sass 文件")]),n._v(" "),e("blockquote",[e("p",[n._v("当我们不需要把导入的文件生成一个单独的 css 时，我们仅需在在文件名前面加一个_")])]),n._v(" "),e("blockquote",[e("p",[n._v("@import '/sass/_sigle.css' //这就会将内容导出到这个引用的地方")])]),n._v(" "),e("ul",[e("li",[n._v("被导入文件的名字以.css 结尾；")]),n._v(" "),e("li",[n._v("被导入文件的名字是一个 URL 地址（例如http://www.sass.hk/css/css.css ），由此可用谷歌字体 API 提供的相应服务；")]),n._v(" "),e("li",[n._v("被导入文件的名字是 CSS 的 url()值。")])]),n._v(" "),e("blockquote",[e("p",[n._v("设置默认值 加 !default")])]),n._v(" "),e("blockquote",[e("p",[n._v("当多个文件导入，有重名的变量时，保证引用的时重新定义过的，如果没有重新定义则使用预先定义好的默认值")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("$ defalut-color:red !default;\n.box{\ncolor:$ defalut-color;\n}\n")])])]),e("p",[n._v("####嵌入导入")]),n._v(" "),e("blockquote",[e("p",[n._v("你的局部 sass 文件在哪里被引用，就会导出到那个地方")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("aside{\ndiv{@import '_div.css'}  //css被导入了，很强大呀\n}\n")])])]),e("h4",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[n._v("#")]),n._v(" 注释")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/*!  我是强力注释 我会出现在css文件里面*/\ndiv{\ncolor:#f09; // 我不会出现在css里面\nfont-size:36px; /*我也不会*/\n}\n插值语句用于注释\n$version: "1.2.3";\n/* This CSS is generated by My Snazzy Framework version #{$version}. */\n编译后\n/* This CSS is generated by My Snazzy Framework version 1.2.3. */\n\n')])])]),e("h4",{attrs:{id:"混合器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#混合器"}},[n._v("#")]),n._v(" 混合器")]),n._v(" "),e("blockquote",[e("p",[n._v("当一组 css 在多个地方使用时，可以使用这种方式")])]),n._v(" "),e("blockquote",[e("p",[n._v("先定义一个混合器 @mixin")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  @mixin imgradius{\n       display: inline;\n       text-align: center;\n       width: 120px;\n       height: 120px;\n       border-radius: 24px;\n\n  }\n")])])]),e("h4",{attrs:{id:"使用-include"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-include"}},[n._v("#")]),n._v(" 使用 @include")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("img{\n    @include imgradius;\n  }\n\n")])])]),e("h4",{attrs:{id:"给混合器传参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给混合器传参数"}},[n._v("#")]),n._v(" 给混合器传参数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("定义下\n\n @mixin li-style($type,$position){\n        list-style-type:$type;\n        list-style-position:$position;\n  }\n使用下\n\nli:first-child{\n      @include li-style(circle,inside)\n    }\n    li:last-child{\n      @include li-style(square,inside)\n    }\n")])])]),e("h3",{attrs:{id:"可以指定默认参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可以指定默认参数"}},[n._v("#")]),n._v(" 可以指定默认参数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("@mixin li-style($type:decimal,$position:inside){\n        list-style-type:$type;\n        list-style-position:$position;\n  }\n\n li:last-child{\n      @include li-style();\n    }\n")])])]),e("h3",{attrs:{id:"选择器继承-extend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择器继承-extend"}},[n._v("#")]),n._v(" 选择器继承 @extend")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(".biaoti{\n    font-size: $h1-Size;\n    font-family: $plain-font;\n    color: $h1-color;\n  }\n\nh1 {\n    @extend .biaoti;\n  }\n")])])]),e("h4",{attrs:{id:"颜色函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#颜色函数"}},[n._v("#")]),n._v(" 颜色函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("$box-color: red;\nul {\n    color: $box-color;\n}\nli {\n    background-color: darken($box-color,30%);\n}\n\n//编译后：\nul {\n  color: red;\n}\nli {\n  background-color: #660000;\n}\n\n")])])]),e("h4",{attrs:{id:"另外几种颜色函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#另外几种颜色函数"}},[n._v("#")]),n._v(" 另外几种颜色函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("lighten(#cc3, 10%) // #d6d65c\ngrayscale(#cc3) // #808080\ncomplement(#cc3) // #33c\n")])])]),e("h4",{attrs:{id:"数据类型-data-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-data-types"}},[n._v("#")]),n._v(" 数据类型 (Data Types)")]),n._v(" "),e("blockquote",[e("p",[n._v("数字，1, 2, 13, 10px\n字符串，有引号字符串与无引号字符串，\"foo\", 'bar', baz\nSassScript 支持 CSS 的两种字符串类型：有引号字符串 (quoted strings)，如 \"Lucida Grande\" 'http://sass-lang.com'；与无引号字符串 (unquoted strings)，如 sans-serif bold，在编译 CSS 文件时不会改变其类型。只有一种情况例外，使用 #{} (interpolation) 时，有引号字符串将被编译为无引号字符串，这样便于在 mixin 中引用选择器名")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('@mixin firefox-message($selector) {\n  body.firefox #{$selector}:before {\n    content: "Hi, Firefox users!";\n  }\n}\n@include firefox-message(".header");\n\n编译后\n\nbody.firefox .header:before {\n  content: "Hi, Firefox users!"; }\n')])])]),e("blockquote",[e("p",[n._v("颜色，blue, #04a3f9, rgba(255,0,0,0.5)\n布尔型，true, false\n空值，null\n数组 (list)，用空格或逗号作分隔符，1.5em 1em 0 2em, Helvetica, Arial, sans-serif\nmaps, 相当于 JavaScript 的 object，(key1: value1, key2: value2)")])]),n._v(" "),e("h3",{attrs:{id:"运算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运算"}},[n._v("#")]),n._v(" 运算")]),n._v(" "),e("blockquote",[e("p",[n._v("支持数字算数，支持关系运算")])]),n._v(" "),e("blockquote",[e("p",[n._v("/ 除法是特例，通常在这几种种情况下展现\n如果值，或值的一部分，是变量或者函数的返回值\n如果值被圆括号包裹\n如果值是算数表达式的一部分")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('p {\n  font: 10px/8px;             // Plain CSS, no division\n  $width: 1000px;\n  width: $width/2;            // Uses a variable, does division\n  width: round(1.5)/2;        // Uses a function, does division\n  height: (500px/2);          // Uses parentheses, does division\n  margin-left: 5px + 8px/2px; // Uses +, does division\n}\n编译后\np {\n  font: 10px/8px;\n  width: 500px;\n  height: 250px;\n  margin-left: 9px; }\n\n保证变量不做除法运算的方法\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n编译后\np {\n  font: 12px/30px; }\n加号链接符的秘密\n如果有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的，相反，无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号。\n\np:before {\n  content: "Foo " + Bar;\n  font-family: sans- + "serif";\n}\n编译为\np:before {\n  content: "Foo Bar";\n  font-family: sans-serif; }\n')])])]),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[n._v("#")]),n._v(" 小结")]),n._v(" "),e("blockquote",[e("p",[n._v("https://www.sass.hk/docs/#t7-3-6 这是比较齐全的地址 仅供学习之用。")])])])}),[],!1,null,null,null);a.default=t.exports}}]);